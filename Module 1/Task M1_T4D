// Define the LED pin
#define ledPin 13

// Define timer compare match register value
int timer1_compare_match;

// LEDs and switches
const byte ledPin1 = 8;
const byte ledPin2 = 10;
const byte ledPin3 = 12;
const byte buttonPin1 = 1;
const byte buttonPin2 = 4;
const byte buttonPin3 = 7;

// Booleans for input states
volatile bool D1_state = LOW;
volatile bool D4_state = LOW;
volatile bool D7_state = LOW;

void setup() {
  
  Serial.begin(9600);
  // Set LED as output
  pinMode(ledPin, OUTPUT);

  // Set LEDs as outputs
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  pinMode(ledPin3, OUTPUT);

  // Set switches as inputs with pullups
  pinMode(buttonPin1, INPUT_PULLUP);
  pinMode(buttonPin2, INPUT_PULLUP);
  pinMode(buttonPin3, INPUT_PULLUP);

  // Enable PCIE2 Bit3 = 1 (Port D)
  PCICR |= B00000100;
  // Enable PCINT17 , PCINT20  & PCINT23 (Pins D1 , D4 & D7)
  PCMSK2 |= B10010010;

  // Disable all interrupts
  noInterrupts();

  // Initialize Timer1
  TCCR1A = 0;
  TCCR1B = 0;

  // Set timer1_compare_match to the correct compare match register value
  // 256 prescaler & 31246 compare match = 2Hz
  timer1_compare_match = 31249;

  // Preload timer with compare match value
  TCNT1 = timer1_compare_match;

  // Set prescaler to 256
  TCCR1B |= (1 << CS12);

  // Enable timer interrupt for compare mode
  TIMSK1 |= (1 << OCIE1A);

  // Enable all interrupts
  interrupts();
}

void loop() {
  if(digitalRead(ledPin1) == HIGH){
	Serial.println("Red Led ON");
    }
  if(digitalRead(ledPin2) == HIGH){
	Serial.println("Yellow Led ON");
    }
  if(digitalRead(ledPin3) == HIGH){
	Serial.println("Green Led ON");
    }
  delay(1000);
}

ISR(TIMER1_COMPA_vect)
// Interrupt Service Routine for compare mode
{
  // Preload timer with compare match value
  TCNT1 = timer1_compare_match;
  
  // Write opposite value to LED
  digitalWrite(ledPin, digitalRead(ledPin) ^ 1);
}

ISR (PCINT2_vect)
{
  // Port D Interrupt occured
  // Check if this was D1
  if (digitalRead(buttonPin1) == LOW) {
    //Pin D1 triggered the ISR on a Falling pulse
    D1_state = !D1_state;
    //Set LED 1 to state of D4_state boolean
    digitalWrite(ledPin1, D1_state);
  }
  // Check if this was D4
  if (digitalRead(buttonPin2) == LOW) {
    //Pin D4 triggered the ISR on a Falling pulse
    D4_state = !D4_state;
    //Set LED 2 to state of D4_state boolean
    digitalWrite(ledPin2, D4_state);
  }
  
  // Check if this was D7
  if (digitalRead(buttonPin3) == LOW) {
    //Pin D7 triggered the ISR on a Falling pulse
    D7_state = !D7_state;
    //Set LED 3 to state of D7_state boolean
    digitalWrite(ledPin3, D7_state);
  }

}
